build:
  image: epitechcontent/epitest-docker
  stage: build
  # instead of calling g++ directly you can also use some build toolkit like make
  # install the necessary build tools when needed
  script:
    - make re
  artifacts:
    paths:
      - myftp
  # depending on your build setup it's most likely a good idea to cache outputs to reduce the build time
  # cache:
  #   paths:
  #     - "*.o"

# run tests using the binary built before
# test:
#  stage: test
#  script:
#    - ./test_ftp.sh

deploy:
  image: epitechcontent/epitest-docker
  stage: deploy
  script:
    - echo "Pushing to $TARGET_REPO"
    - mkdir -p ~/.ssh
    - echo -e "host git.epitech.eu\n HostName git.epitech.eu\n IdentityFile ~/.ssh/epitech\n StrictHostKeyChecking no\n User git" > ~/.ssh/config
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/epitech
    - git config core.sshCommand "ssh -i ~/.ssh/epitech -F /dev/null"
    - git remote remove epitech || true
    - git remote add epitech $TARGET_REPO || true
    - git push epitech $CI_COMMIT_REF_NAME
    - rm -rf ~/.ssh/epitech
